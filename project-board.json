{
  "data": {
    "repository": {
      "project": {
        "columns": {
          "nodes": [
            {
              "cards": {
                "nodes": [
                  {
                    "content": {
                      "number": 35878,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "No error on indirect calls",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37297,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Fix handling of string enums on LHS of `+=`",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Eli Barzilay"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37815,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "Remove redundant intersections from unions",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37962,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Fix instantiated check for imports",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "name": "Not started"
            },
            {
              "cards": {
                "nodes": [
                  {
                    "content": {
                      "number": 28708,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Fix block-scoped capturing by class elements inside iteration statements",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 38200,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Add a type-guard overload of Array.every",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 38107,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "fix(38073): Extract to function refactoring generates invalid code for arrow function that references `this`",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Mine Starks"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 38045,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "fix(23871): convertFunctionToEs6Class: Avoid insertNodeAfter",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Orta"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 36844,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Add separate PrivateIdentifier and SourceFile constructors",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 38135,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "fix(37791): Using object destructuring with ECMAScript's private field as computed property name leads to runtime error",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 38153,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Make Iterable Map constructor argument optional",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 31633,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Allow inference to explore multiple instances of the same symbol",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 31455,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Fix conditional type type parameter leak",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 35494,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "capture thisArg of optionalChaining in parens",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 35741,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Type comparison when conditional type is target",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 35877,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "fix receiver on calls of imported and exported functions",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 27227,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Improve error message for `==` of two different types",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Eli Barzilay"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 31023,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Allow identical type parameter lists to merge in union signatures",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 28250,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "add support to convert lambda to function and vice-versa",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Jesse Trinity"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 29228,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Mapped symbol",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 29374,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Allowed non-this, non-super code before super call in derived classes with property initializers",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 30161,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "narrow by instanceof: infer type parameters from original type",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 31345,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "During inference break down unions on the target side before unions on the source side",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33707,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Better typings for Promise, like #31117",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33055,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Better typings for Promise.all(), like #31117",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33103,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Better typings for Promise.then(), like #31117",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33074,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Better typings for Promise.resolve(), like #31117",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33139,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Higher order this parameter inference, like #31116",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33337,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Corrected ES5 for-in destructuring binding emit",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33363,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Class emit: cached repeat prototype sets in a variable",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33441,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Improve non-ambient class and function merge error",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Orta"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33544,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "fix: add this type for Reflect.defineProperty",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33645,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Better typings for Array.concat(), etc.",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33673,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Emit comments and newlines only once even with initializers added by the transformer",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33767,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Add an overload to Object.freeze that preserves literal types",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33876,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "expose getOptionalType and getNonOptionalType",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Orta"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 34518,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Cache global tagged template objects",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 34868,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Sort emitted declarations of union types.",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 34941,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Add union of replacer function and string ",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 35284,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Defer generic awaited type",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 35594,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "fix(lib/es2015): Fix definition of `ProxyHandler`",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 35863,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Fixes non-null assertion applied to type narrowed to never not issuing an error.",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 35608,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "feat(lib/es2015): Add typed overloads to `Reflect`",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 36408,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Remove usage of non-standardised `Reflect.decorate`.",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 36543,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "fix(33836): VSCode - generate accessors fixup on readonly field removes modifier",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Jesse Trinity"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 28023,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": " Improve error message when comparing non-comparable types",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ryan Cavanaugh"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 29468,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Instantiate `this` in non-super property/element access expressions",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37013,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "fix(helpers): Use `hasOwnProperty.call`",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 36747,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Merge diagnosticsProducing and nonDiagnosticsProducing checkers into a single checker supporting lazy diagnostics",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Sheetal Nandi"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 36723,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Allow specifying TReturn and TNext for AsyncIterableIterator and AsyncIterable",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 36599,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Fix missing `undefined` checks",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 36673,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Breaking Change"
                          },
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Do not parse template arguments in JavaScript files.",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Andrew Branch"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37283,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Added runtime TypeError for non-function, non-null __extends",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37424,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Support top level \"for await of\"",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37392,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Enable excess property checking on spread assignment",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37421,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "Support xml namespace prefix for JSX elements and attributes",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Andrew Branch"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37497,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Token hints for missing closing braces: classes, enums, jsx, modules, types",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Andrew Branch"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37721,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Add support for NumberFormatOptions notation",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37702,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Re-order reduce overloads",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37615,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Add 'T | PromiseLike<T>' inference from awaited types",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37376,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "feat: add util {is,create,update}DynamicImport",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 30639,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Add missing relationship allowing a type to be assignable to a conditional when assignable to both branches",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37913,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "feat: add code fix for ts1064 and 1055",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Andrew Branch"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37912,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "fix: extract const in jsx",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Andrew Branch"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 38088,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Fix missing narrow with assignment",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37910,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "Cache complex union and intersection relations",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37907,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "feat: add a codefix to fix class to className in react",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Orta"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37891,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Fix indentation preservation in JSDoc (#37717)",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Andrew Branch"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37902,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Infer extracted local variable name from property name",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Mine Starks"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37881,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Breaking Change"
                          },
                          {
                            "name": "For Backlog Bug"
                          },
                          {
                            "name": "lib update"
                          }
                        ]
                      },
                      "title": "Make `Symbol#valueDeclaration` optional in public API",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 38036,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "allow consecutive newlines in jsdoc tag comments",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 38013,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Adds [unit] and [unitDisplay] to NumberFormatOptions",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37980,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "Feat#Provide a quickfix for non-exported types",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Daniel Rosenwasser"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 38011,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Handle recursive type references up to a certain level of expansion in inference",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37727,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Add logical assignment operator",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Eli Barzilay"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "name": "Needs review"
            },
            {
              "cards": {
                "nodes": [
                  {
                    "content": {
                      "number": 31277,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Do not measure variance for a conditional type extendsType",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33863,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Add shim for ES Promise",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33570,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "Breaking Change"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Delete the {} and unconstrained type parameter assignability rule",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 35885,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Added quick-fix to rewrite index access as call to get/set method.",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Andrew Casey"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 31029,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Fix relations for instantiations of same generic signature",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Anders Hejlsberg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37228,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "fix(37165): Cannot read property 'flags' of undefined",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Sheetal Nandi"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37029,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Add ToggleLineComment and ToggleMultilineComment service",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Andrew Casey"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 36131,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Fix parsing nested parameter types of `@callback` JSDoc tag",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37581,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          },
                          {
                            "name": "lib update"
                          }
                        ]
                      },
                      "title": "Add: about missing types in RegExp",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37608,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "New definition for omit that should ensure the name Omit is preserved…",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 36143,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Fix handling of templates in preProcessFile",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37887,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "fix(35779): Comments at the end of an array, when the last item ends with a comma, are not compiled",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33069,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Fix the error when use spread arguments twice",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Eli Barzilay"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37894,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Always error on property override accessor",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Andrew Branch"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37800,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Better error message for accidental calls to get-accessors",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37546,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "fix broken regex on \"src/services/completions.ts#getCompletionData\"",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37797,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Add static index signature",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Eli Barzilay"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 38105,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Issue35876: Give better error message when Classic Module Resolution with incorrect path",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Orta"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37917,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "Improve error range for ts2657 (jsx expr must have parent element), add code fix for it",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Andrew Branch"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37839,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "add `toString` definitions for base types that have them",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 38049,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Report primitive type in literal-to-primitive relation complaints",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Daniel Rosenwasser"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 38228,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Allowed comment directives to be multiline",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Sheetal Nandi"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37903,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Add index signature for anonymous object literal type",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37964,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Dont look for properties of Object and Function type when looking to resolve named import from module with `export=`",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "name": "Waiting on author"
            },
            {
              "cards": {
                "nodes": [
                  {
                    "content": {
                      "number": 33248,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Milestone Bug"
                          }
                        ]
                      },
                      "title": "Add use-before-def error for uninitialized property",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33497,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Author: Team"
                          },
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Change default for TNext in Iterator/AsyncIterator",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Ron Buckton"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33434,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Unify logic in typeof narrowing",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 33089,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Only apply indexed access write simplifications to types that arise from mutation",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37451,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "Add support of contextual quick info",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37788,
                      "labels": {
                        "nodes": [
                          {
                            "name": "Housekeeping"
                          }
                        ]
                      },
                      "title": "Updating dependencies",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Wesley Wigham"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 29539,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "expose jsdoc factory",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Nathan Shively-Sanders"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37786,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Backlog Bug"
                          }
                        ]
                      },
                      "title": "fix(36055): `prop in dict` does not report error if `prop` is union type such as `MyClass | string`",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Sheetal Nandi"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "content": {
                      "number": 37806,
                      "labels": {
                        "nodes": [
                          {
                            "name": "For Uncommitted Bug"
                          }
                        ]
                      },
                      "title": "feat(37782): 'declare method' quick fix for adding a private method",
                      "assignees": {
                        "nodes": [
                          {
                            "name": "Andrew Branch"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "name": "Needs merge"
            }
          ]
        }
      }
    }
  }
}
